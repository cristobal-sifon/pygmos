      inflats = "S20081023S0042" Input flatfields
     specflat = "S20081023S0042_flat" Output normalized flat (MEF)
 (fl_slitcorr = no)             Correct output for Illumination/Slit-Function
    (slitfunc = "")             Slit Function (MEF output of gsslitfunc)
     (fl_keep = yes)            Keep imcombined flat?
    (combflat = "S20081023S0042_comb") Filename for imcombined flat
     (fl_over = yes)            Subtract overscan level
     (fl_trim = yes)            Trim off overscan region
     (fl_bias = yes)            Subtract bias image
     (fl_dark = no)             Subtract (scaled) dark image
   (fl_qecorr = no)             QE correct the input images? (NOT YET IMPLEMENTED)
   (fl_fixpix = yes)            Interpolate across chip gaps
    (fl_vardq = no)             Create variance and data quality frames
        (bias = "gS20081023S0099_bias.fits") Bias image
        (dark = "")             Dark image
 (key_exptime = "EXPTIME")      Exposure time header keyword
 (key_biassec = "BIASSEC")      Header keyword for overscan strip image section
 (key_datasec = "DATASEC")      Header keyword for data section (excludes the overscan)
     (rawpath = "")             GPREPARE: Path for input raw images
     (sci_ext = "SCI")          Name of science extension
     (var_ext = "VAR")          Name of variance extension
      (dq_ext = "DQ")           Name of data quality extension
     (key_mdf = "MASKNAME")     Header keyword for the MDF
     (mdffile = "")             MDF to use if keyword not found
      (mdfdir = "gmos$data/")   MDF database directory
         (bpm = "")             Name of bad pixel mask file or image
      (gaindb = "default")      Database with gain data
   (gratingdb = "gmos$data/GMOSgratings.dat") Gratings database file
    (filterdb = "gmos$data/GMOSfilters.dat") Filters database file
     (bpmfile = "gmos$data/chipgaps.dat") Info on location of chip gaps
    (refimage = "")             Reference image for slit positions
    (qe_refim = "")             QE wavelength reference image. (NOT YET IMPLEMENTED)
(fl_keep_qeim = yes)            Keep QE correction? (NOT YET IMPLEMENTED)
 (qe_corrpref = "qecorr")       Prefix for QE correction files. (NOT YET IMPLEMENTED)
(qe_corrimage = "")             Name for QE correction data. (NOT YET IMPLEMENTED)
     (qe_data = "gmosQEfactors.dat") Data file that contains QE information. (NOT YET IMPLEMENTED)
  (qe_datadir = "gmos$data/")   Directory containg QE data file. (NOT YET IMPLEMENTED)
         (sat = "default")      Saturation level in raw images
     (xoffset = INDEF)          X offset in wavelength [nm]
     (yoffset = INDEF)          Y offset in unbinned pixels
        (yadd = 0.)             Additional pixels to add to each end of MOS slitlet lengths
  (wave_limit = INDEF)          Upper wavelength limit of cut spectra (nm). Only for use with fl_detec=no.
  (fl_usegrad = no)             Use gradient method to find MOS slits
     (fl_emis = no)             mask emission lines from lamp (affected pixels set to 1. in output)
 (nbiascontam = "default")      Number of columns removed from overscan region
    (biasrows = "default")      Rows to use for overscan region
      (minval = INDEF)          Minimum pixel value in normalized flat
    (fl_inter = no)             Fit response interactively?
   (fl_answer = yes)            Continue interactive fitting?
    (fl_detec = no)             Fit response detector by detector rather than slit by slit?
  (fl_seprows = yes)            Fit and normalize each row separately?
    (function = "spline3")      Fitting function for response
       (order = "15")           Order of fitting function, minimum value=1
  (low_reject = 3.)             Low rejection in sigma of response fit
 (high_reject = 3.)             High rejection in sigma of response fit
    (niterate = 2)              Number of rejection iterations in response fit
     (combine = "average")      Combination operation
      (reject = "avsigclip")    Rejection algorithm
    (masktype = "goodvalue")    Mask type
   (maskvalue = 0.)             Mask value
       (scale = "mean")         Image scaling
        (zero = "none")         Image zeropoint offset
      (weight = "none")         Image weights
     (statsec = "")             Statistics section
  (lthreshold = INDEF)          Lower threshold
  (hthreshold = INDEF)          Upper threshold
        (nlow = 1)              minmax: Number of low pixels to reject
       (nhigh = 1)              minmax: Number of high pixels to reject
       (nkeep = 0)              Minimum to keep or maximum to reject
       (mclip = yes)            Use median in sigma clipping algorithms?
      (lsigma = 3.)             Lower sigma clipping factor
      (hsigma = 3.)             Upper sigma clipping factor
     (key_ron = "RDNOISE")      Keyword for readout noise in e-
    (key_gain = "GAIN")         Keyword for gain in electrons/ADU
         (ron = 3.5)            Readout noise rms in electrons
        (gain = 2.2)            Gain in e-/ADU
      (snoise = "0.0")          ccdclip: Sensitivity noise (electrons)
    (sigscale = 0.1)            Tolerance for sigma clipping scaling correction
       (pclip = -0.5)           pclip: Percentile clipping parameter
        (grow = 0.)             Radius (pixels) for neighbor rejection
 (ovs_flinter = no)             Interactive overscan fitting?
     (ovs_med = no)             Use median instead of average in column bias?
    (ovs_func = "chebyshev")    Overscan fitting function
   (ovs_order = 1)              Order of overscan fitting function
    (ovs_lowr = 3.)             Low sigma rejection factor
   (ovs_highr = 3.)             High sigma rejection factor
   (ovs_niter = 2)              Number of rejection iterations
   (fl_double = no)             Make double flats for nod-and-shuffle science
    (nshuffle = 0)              Number of shuffle pixels (unbinned)
     (logfile = "")             Logfile name
     (verbose = yes)            Verbose
      (status = 0)              Exit status (0=good)
    (scanfile = "")             Internal use only
        (mode = "ql")           
