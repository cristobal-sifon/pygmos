#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import (absolute_import, division, print_function)

import glob
import os
try:
    from astropy.io import fits as pyfits
except ImportError:
    import pyfits
import sys
import time
from pyraf import iraf
from iraf import gemini
from iraf import gemtools
from iraf import gmos

"""
PyGMOS
"""

# Other packages provided with the code:
from pygmos import (check_gswave, inventory, paramtools, reduction, tasks,
                    utils)

# complementary files will be located in the pygmos folder so need to
# define the environment
pygmos_path = os.path.dirname(os.path.split(
    inventory.__file__.replace('inventory.pyc', ''))[0])
os.environ['pygmos_path'] = pygmos_path

# Cosmic ray removal task (van Dokkum 2001, PASP, 113, 1420)
iraf.task(lacos_spec=os.path.join(pygmos_path,'lacos_spec.cl'))


def main():
    """
    The pipeline itself. Reduces a set of GMOS spectra (MOS or
    longslit) given the name of the object and, optionally, the
    number(s) of the mask(s) wanted.

    """
    print(utils.intro)

    args = paramtools.read_args()
    print('masks =', args.masks)
    print('program =', args.program)

    # Default value if nothing was specified in the console
    if args.masks == 'all':
        if args.read_inventory:
            masks = sorted(inventory.read(args.objectid, gmos.gsreduce.bias))
        else:
            masks = sorted(inventory.generate(
                '', args.objectid, gmos.gsreduce.bias))
        args.masks = [str(m) for m in masks]
    elif args.masks == 'longslit':
        inventory.generate(
            args.program, args.objectid, gmos.gsreduce.bias,
            masktype=args.masks)
    else:
        if args.read_inventory:
            inventory.read(args.objectid, gmos.gsreduce.bias)
        else:
            inventory.generate(args.program, args.objectid,
            gmos.gsreduce.bias)
    if args.inventory_only:
        print()
        return

    paramtools.read_iraf_params(args)
    # open DS9?
    if args.ds9:
        os.system('ds9 &')
    # GMOS display format
    iraf.set(stdimage='imtgmos')
    if args.align:
        iraf.task(align=os.path.join(pygmos_path, 'align.cl'))

    assoc = '{0}.assoc'.format(cluster)
    waves = getWavelengths(assoc)
    print('\nObject:', cluster)

    if args.nod:
        print('Reducing Nod-and-Shuffle observations. Remember that the')
        print('bias image must be overscan subtracted (interactively).')

    if args.masks == 'longslit':
        gmos.gsreduce.mdfdir = 'gmos$data'
        gmos.gsflat.mdfdir = 'gmos$data'
        reduction.longslit(cluster, waves, assoc, ns=nod)
    else:
        for mask in masks:
            scienceFiles = utils.getScienceFiles(assoc, mask)
            reduction.mos(
                cluster, mask, scienceFiles, assoc, cutdir, align,
                align_suffix, ns=nod)
    return


if __name__ == '__main__':
    t0 = time.time()
    main()
    print('\nTotal execution time {0:.1f} min'.format(
        ((time.time() - t0) / 60)))

